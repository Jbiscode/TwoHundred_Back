name: gradle_CICD.yml
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - run: |
          pwd
          ls
          ls src/main/resources
          cat src/main/resources/application.yml
          cat src/main/resources/secret.yml
          ls  
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set execute permission for gradlew
        run: chmod +x gradlew

      - name: Git secrets
        run: |
          touch src/main/resources/keystore.p12
          touch src/main/resources/secret.yml
          ls
          echo ${{ secrets.SSL_KEYSTORE }} | base64 -d > src/main/resources/keystore.p12
          ls
          echo ${{ secrets.SECRET_PROD }} | base64 -d > src/main/resources/secret.yml
          echo ${{ secrets.APPLICATION_SET }} | base64 -d > src/main/resources/application.yml
          ls
          cat src/main/resources/application.yml
          cat src/main/resources/secret.yml

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          cache-read-only: true
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPO}}:${{ github.sha }} .
          docker push ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPO}}:${{ github.sha }}



  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: NCP login & Docker image pull and run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          key: ${{ secrets.NCP_SSH_SECRET_KEY }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            docker stop ${{ secrets.DOCKER_IMAGE_NAME }} || true
            docker rm ${{ secrets.DOCKER_IMAGE_NAME }} || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ github.sha }}
            docker run -d -p 80:80 -p 443:443 --name ${{ secrets.DOCKER_IMAGE_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ github.sha }}

